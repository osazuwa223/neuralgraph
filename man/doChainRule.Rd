% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/optimization.R
\name{doChainRule}
\alias{doChainRule}
\title{Back-propagation of derivative calculation}
\usage{
doChainRule(g, v, e)
}
\arguments{
\item{g}{a model}

\item{v}{vertex index whose incoming weights are the argument for the gradient function}

\item{e}{edge index of the individual element of the weight vector where the derivative is being calculated}
}
\value{
a vector corresponding to the derivative
}
\description{
The getGradientFunction closure creates a gradient function specific to a given vertex.
It takes as an argument the weights corresponding to the incoming parents of that vertex.
When this weight vector is varied, the predictions on the observed vertices change, and thus
the cost function output changes.  The gradient function captures that rate of change.  It relies
on back-propagation, calculating the rates of change for every downstream node that is affected
by changing the weight vector.  This function does that back-propagation calculation for each
element of the weight vector
}

